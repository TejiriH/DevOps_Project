name: E-Commerce App CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        node-version:
          - 18.x
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install API dependencies
        working-directory: ./ecommerce/api
        run: |
          npm install
      - name: Install Webapp dependencies
        working-directory: ./ecommerce/webapp
        run: |
          npm install
      - name: Fix permissions for Jest executable
        run: |
          chmod +x ./ecommerce/api/node_modules/.bin/jest
          chmod +x ./ecommerce/webapp/node_modules/.bin/jest
      - name: Run Jest tests for API
        working-directory: ./ecommerce/api
        run: |
          npm install --save-dev supertest
          npm ci --include=dev
          npm test -- --coverage --maxWorkers=2
      - name: Run Jest tests for Webapp
        working-directory: ./ecommerce/webapp
        run: |
          npm install --save-dev supertest
          npm test -- --coverage --maxWorkers=2
      - name: Build Webapp
        working-directory: ./ecommerce/webapp
        run: |
          chmod +x ./node_modules/.bin/react-scripts
          npm run build

  Create-dockerfile-image:
    runs-on: ubuntu-latest
    needs: build-and-test
    permissions:
      contents: read
      actions: write
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Backend Docker image
      run: >
        docker build -t ${{ secrets.DOCKER_USERNAME }}/my-backend:v1.0.0
        ./ecommerce/api
    - name: Build Frontend Docker image
      run: >
        docker build -t ${{ secrets.DOCKER_USERNAME }}/my-frontend:v1.0.1
        ./ecommerce/webapp
    - name: Push Backend Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/my-backend:v1.0.0
    - name: Push Frontend Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/my-frontend:v1.0.1

    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USER }}
        key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
        port: 22
        script: >
          # Stop and remove any existing containers
          docker rm -f backend frontend || true

          # Pull and run the backend container
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-backend:v1.0.0
          docker run -d -p 5000:5000 --name backend ${{ secrets.DOCKER_USERNAME }}/my-backend:v1.0.0


          # Pull and run the frontend container
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-frontend:v1.0.1
          docker run -d -p 80:80 --name frontend ${{ secrets.DOCKER_USERNAME }}/my-frontend:v1.0.1
